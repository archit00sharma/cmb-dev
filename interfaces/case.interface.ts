import mongoose, { AnyArray, Schema } from "mongoose";

export interface caseManagement {
    _id: string;
    date: String;
    time: String;
    fileNo: Number;
    barCode?: String;
    applicantName: String;
    applicantType: String;
    addressType: String;
    officeName?: String;
    address: String;
    pinCode?: Number;
    branch?: String;
    area: String;
    bank: String;
    product: String;
    mobileNo: Number;
    duplicate: Boolean;
    managerId?: Schema.Types.ObjectId;
    seniorSupervisorId?: Schema.Types.ObjectId;
    spervisorId?: Schema.Types.ObjectId;
    fieldExecutiveId?: Schema.Types.ObjectId;
    acceptedBy?: Schema.Types.ObjectId;
    declinedBy?: Array<any>;
    stage: String;
    status: String;
    logs: Array<any>;
    parentId?: Schema.Types.ObjectId;
    addressConfirm?: String,
    addressFieldExecutive?: String,
    addressFieldExecutiveRemarks?: String,
    contactedPersonName?: String,
    contactedPersonDesignation?: String;
    contactedPersonDesignationRemarks?: String,
    applicantOccupation?: String,
    workingFrom?: String
    premisesBusiness?: Object
    areaType?: String,
    businessBoard?: String,
    businessBoardNameConfirmation?: String;
    businessBoardRemarks?: Object
    natureOfBusiness?: String,
    totalIncome?: Number
    stockSeen?: String,
    stock?: String,
    businessActivitySeen?: String,
    businessActivity?: String,
    noOfEmployees?: Number
    negativeProfile?: String,
    negativeProfileRemarks?: String
    neighbourCheck1?: String
    neighbourCheck2?: String
    distance?: String
    applicantStayAddress?: String
    premisesResidence?: String,
    premisesresidenceRemarks?: String
    staySinceSameAddressYear?: String;
    staySinceSameAddressMonth?: String;
    documents?: Array<any>;
    dateVisit?: Date;
    timeVisit?: String;
    easeOfLocating?: String;
    landMark?: String;
    applicantDesignation?: String;
    applicantDesignationRemarks?: String;
    neighbourCheck1Remarks?: String;
    neighbourCheck2Remarks?: String;
    applicantStayAddressConfirm?: String;
    officeSetup?: String;
    remarks?: String;
    officeLock?: String;
    age?: String;
    lat?: String;
    long?: String;
    agencyName?: String;
    caseStatus?: String;
    caseStatusRemarks?: String;
    maritalStatus?: String;
    isSpouseWorking?: String;
    spouseWorkingPalace?: String;
    spouseWorkingSince?: String;
    spouseSalary?: Number;
    noOfFMember?: Number;
    noEarningMember?: Number;
    locationOfResi?: String;
    typeOfResi?: String;
    typeOfResiRemarks?: String;
    areaLocality?: String;
    houseArea?: Number;
    resiInterior?: String;
    resiExterior?: String;
    houseCondition?: String;
    vehicle?: String;
    vehicleRemarks?: String;
    copyStatus?: String;
    caseUploaded?: Date;
    supervisor?: Object;
    manager?: Object;
    seniorSupervisor?: Object
    fieldExecutive?: Object;
    admin?: Object;

    directSupervisor?: Boolean;
    entryAllowed?: String;

}